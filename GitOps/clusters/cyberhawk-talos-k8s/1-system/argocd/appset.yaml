apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cyberhawk-talos-k8s
  namespace: argocd
spec:
  goTemplate: true
  generators:
    - git:
        repoURL: https://github.com/jochristian/omni-templates-cyberhawk.git
        revision: HEAD
        directories:
          # Scan for namespace directories (level 1) - these become apps deployed to their own namespace
          - path: "GitOps/clusters/cyberhawk-talos-k8s/1-system/*"
          - path: "GitOps/clusters/cyberhawk-talos-k8s/2-services/*"
          - path: "GitOps/clusters/cyberhawk-talos-k8s/3-apps/*"
          # Scan for app directories under namespaces (level 2) - these are deployed to parent namespace
          - path: "GitOps/clusters/cyberhawk-talos-k8s/1-system/*/*"
          - path: "GitOps/clusters/cyberhawk-talos-k8s/2-services/*/*"
          - path: "GitOps/clusters/cyberhawk-talos-k8s/3-apps/*/*"
  template:
    metadata:
      # Generate unique names: layer-namespace or layer-namespace-app
      name: |
        {{- $segments := splitList "/" .path.path -}}
        {{- $layer := index $segments 3 -}}
        {{- if gt (len $segments) 5 -}}
          {{- printf "%s-%s-%s" $layer (index $segments 4) .path.basename | lower -}}
        {{- else -}}
          {{- printf "%s-%s" $layer .path.basename | lower -}}
        {{- end -}}
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://github.com/jochristian/omni-templates-cyberhawk.git
        targetRevision: HEAD
        path: '{{ .path.path }}'
      destination:
        name: in-cluster
        # Use parent directory as namespace for nested apps, basename for top-level
        namespace: |
          {{- $segments := splitList "/" .path.path -}}
          {{- if gt (len $segments) 5 -}}
            {{- index $segments 4 -}}
          {{- else -}}
            {{ .path.basename }}
          {{- end -}}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
